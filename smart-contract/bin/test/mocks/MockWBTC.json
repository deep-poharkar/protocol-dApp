{
    "contractName": "MockWBTC",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "MAX_FAUCET_AMOUNT",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burnFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "faucet",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FAUCET_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"d:/Projects/tc-protocol/smart-contract/test/mocks/MockWBTC.sol\":\"MockWBTC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa3ce7a0af2f67fd8de6bdf4fb32434fd84396596c5fb55a8b9213cd08b71b2d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa06b0c234b5597955f9a5b867a9bd9c498d4d1c89925a0c1dea2facd5a4ae1b\",\"dweb:/ipfs/QmP3y9CMRRY1ipQRcF1HSRos56jtLA1rnVakks5MTi9WLe\"]},\"d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xaba481c8f1a573bd591832534dd3bba96e550360becd1683a0e4fd5e3613129d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd37c5a76cb0e625a3c00dd310ff2e379c880d016d2d073b50fbd6a490f9e358\",\"dweb:/ipfs/QmQmnhdDt6SkAxdFBkNB4rYjtoKPfGdTxpL9uniEoCtMy9\"]},\"d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x0270cb4e50d6bcdd780df229606076d39df796860d266b5426f374c36f34fe89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511db944b3f0a57b56fda90d1e466cca6a0dea2297d816251966c8f025313973\",\"dweb:/ipfs/QmRgu5uCaKkoRr3amWGfhy6bVwhpH5tr1vynaNQyEYiE4p\"]},\"d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x965112323305082223ae22da6b1b15d98560f749d75ff43639ca2d427e136d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://223e25441501ad9372e21aa897460cb07b05e25c534865068767ca9dd7d7bfdf\",\"dweb:/ipfs/QmWKFG8zyL2gvohAoJY6y3ncAMGrwCxoqR5iQ2Sq7xdW2H\"]},\"d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xdacd8902db78d5c80a8860b2dd87e1a725201d2b1936343e3e21649751a60dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d1eede17bc7ee5245a3b55e873cd59b3d6cbb8fed76cb957a403403f84daa5e\",\"dweb:/ipfs/QmbHGiRxPVRCvu91UpPBKU5b4MrEvqKxHPiPrPpQxyg1LK\"]},\"d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"d:/Projects/tc-protocol/smart-contract/test/mocks/MockWBTC.sol\":{\"keccak256\":\"0x1eeada9bc5fd9fa689a58c7dc1ed8c89e7bcc72fcd5a9998d41c5700276a7479\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://729f1486fa1fbe8541b656736c909a23846d501aaada83eca1291ed4f8fff9c2\",\"dweb:/ipfs/QmVZucNvQkoosC41jRhTYvPswFCrjdSRZqBm9k265r8rBK\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a577261707065642042544360a81b815250604051806040016040528060048152602001635742544360e01b815250816003908162000064919062000191565b50600462000073828262000191565b505050620000906200008a6200009660201b60201c565b6200009a565b6200025d565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011757607f821691505b6020821081036200013857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018c57600081815260208120601f850160051c81016020861015620001675750805b601f850160051c820191505b81811015620001885782815560010162000173565b5050505b505050565b81516001600160401b03811115620001ad57620001ad620000ec565b620001c581620001be845462000102565b846200013e565b602080601f831160018114620001fd5760008415620001e45750858301515b600019600386901b1c1916600185901b17855562000188565b600085815260208120601f198616915b828110156200022e578886015182559484019460019091019084016200020d565b50858210156200024d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610cd5806200026d6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a457c2d711610071578063a457c2d71461024c578063a9059cbb1461025f578063dd62ed3e14610272578063de5f72fd14610285578063f2fde38b1461028d57600080fd5b8063715018a6146101fb57806379cc6790146102035780638da5cb5b1461021657806395d89b4114610231578063a0712d681461023957600080fd5b8063313ce567116100f4578063313ce5671461018c578063395093511461019b57806342966c68146101ae5780636376d2d8146101c357806370a08231146101d257600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102a0565b60405161013b9190610b06565b60405180910390f35b610157610152366004610b70565b610332565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610b9a565b61034c565b6040516012815260200161013b565b6101576101a9366004610b70565b610370565b6101c16101bc366004610bd6565b610392565b005b61016b678ac7230489e8000081565b61016b6101e0366004610bef565b6001600160a01b031660009081526020819052604090205490565b6101c161039f565b6101c1610211366004610b70565b6103b3565b6005546040516001600160a01b03909116815260200161013b565b61012e6103cc565b6101c1610247366004610bd6565b6103db565b61015761025a366004610b70565b6103ed565b61015761026d366004610b70565b61046d565b61016b610280366004610c11565b61047b565b6101c16104a6565b6101c161029b366004610bef565b6104b8565b6060600380546102af90610c44565b80601f01602080910402602001604051908101604052809291908181526020018280546102db90610c44565b80156103285780601f106102fd57610100808354040283529160200191610328565b820191906000526020600020905b81548152906001019060200180831161030b57829003601f168201915b5050505050905090565b60003361034081858561052e565b60019150505b92915050565b60003361035a858285610653565b6103658585856106cd565b506001949350505050565b600033610340818585610383838361047b565b61038d9190610c7e565b61052e565b61039c3382610871565b50565b6103a761099b565b6103b160006109f5565b565b6103be823383610653565b6103c88282610871565b5050565b6060600480546102af90610c44565b6103e361099b565b61039c3382610a47565b600033816103fb828661047b565b9050838110156104605760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610365828686840361052e565b6000336103408185856106cd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6103b133678ac7230489e80000610a47565b6104c061099b565b6001600160a01b0381166105255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610457565b61039c816109f5565b6001600160a01b0383166105905760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610457565b6001600160a01b0382166105f15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610457565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061065f848461047b565b905060001981146106c757818110156106ba5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610457565b6106c7848484840361052e565b50505050565b6001600160a01b0383166107315760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610457565b6001600160a01b0382166107935760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610457565b6001600160a01b0383166000908152602081905260409020548181101561080b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610457565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106c7565b6001600160a01b0382166108d15760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610457565b6001600160a01b038216600090815260208190526040902054818110156109455760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610457565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610646565b6005546001600160a01b031633146103b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610457565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610a9d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610457565b8060026000828254610aaf9190610c7e565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610b3357858101830151858201604001528201610b17565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b6b57600080fd5b919050565b60008060408385031215610b8357600080fd5b610b8c83610b54565b946020939093013593505050565b600080600060608486031215610baf57600080fd5b610bb884610b54565b9250610bc660208501610b54565b9150604084013590509250925092565b600060208284031215610be857600080fd5b5035919050565b600060208284031215610c0157600080fd5b610c0a82610b54565b9392505050565b60008060408385031215610c2457600080fd5b610c2d83610b54565b9150610c3b60208401610b54565b90509250929050565b600181811c90821680610c5857607f821691505b602082108103610c7857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561034657634e487b7160e01b600052601160045260246000fdfea2646970667358221220a2c7769160f8d12fcb2408415ba303160134bd5b3dd847e56c8ccce11960172264736f6c63430008130033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a457c2d711610071578063a457c2d71461024c578063a9059cbb1461025f578063dd62ed3e14610272578063de5f72fd14610285578063f2fde38b1461028d57600080fd5b8063715018a6146101fb57806379cc6790146102035780638da5cb5b1461021657806395d89b4114610231578063a0712d681461023957600080fd5b8063313ce567116100f4578063313ce5671461018c578063395093511461019b57806342966c68146101ae5780636376d2d8146101c357806370a08231146101d257600080fd5b806306fdde0314610126578063095ea7b31461014457806318160ddd1461016757806323b872dd14610179575b600080fd5b61012e6102a0565b60405161013b9190610b06565b60405180910390f35b610157610152366004610b70565b610332565b604051901515815260200161013b565b6002545b60405190815260200161013b565b610157610187366004610b9a565b61034c565b6040516012815260200161013b565b6101576101a9366004610b70565b610370565b6101c16101bc366004610bd6565b610392565b005b61016b678ac7230489e8000081565b61016b6101e0366004610bef565b6001600160a01b031660009081526020819052604090205490565b6101c161039f565b6101c1610211366004610b70565b6103b3565b6005546040516001600160a01b03909116815260200161013b565b61012e6103cc565b6101c1610247366004610bd6565b6103db565b61015761025a366004610b70565b6103ed565b61015761026d366004610b70565b61046d565b61016b610280366004610c11565b61047b565b6101c16104a6565b6101c161029b366004610bef565b6104b8565b6060600380546102af90610c44565b80601f01602080910402602001604051908101604052809291908181526020018280546102db90610c44565b80156103285780601f106102fd57610100808354040283529160200191610328565b820191906000526020600020905b81548152906001019060200180831161030b57829003601f168201915b5050505050905090565b60003361034081858561052e565b60019150505b92915050565b60003361035a858285610653565b6103658585856106cd565b506001949350505050565b600033610340818585610383838361047b565b61038d9190610c7e565b61052e565b61039c3382610871565b50565b6103a761099b565b6103b160006109f5565b565b6103be823383610653565b6103c88282610871565b5050565b6060600480546102af90610c44565b6103e361099b565b61039c3382610a47565b600033816103fb828661047b565b9050838110156104605760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610365828686840361052e565b6000336103408185856106cd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6103b133678ac7230489e80000610a47565b6104c061099b565b6001600160a01b0381166105255760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610457565b61039c816109f5565b6001600160a01b0383166105905760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610457565b6001600160a01b0382166105f15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610457565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061065f848461047b565b905060001981146106c757818110156106ba5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610457565b6106c7848484840361052e565b50505050565b6001600160a01b0383166107315760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610457565b6001600160a01b0382166107935760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610457565b6001600160a01b0383166000908152602081905260409020548181101561080b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610457565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106c7565b6001600160a01b0382166108d15760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610457565b6001600160a01b038216600090815260208190526040902054818110156109455760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610457565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610646565b6005546001600160a01b031633146103b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610457565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610a9d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610457565b8060026000828254610aaf9190610c7e565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610b3357858101830151858201604001528201610b17565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b6b57600080fd5b919050565b60008060408385031215610b8357600080fd5b610b8c83610b54565b946020939093013593505050565b600080600060608486031215610baf57600080fd5b610bb884610b54565b9250610bc660208501610b54565b9150604084013590509250925092565b600060208284031215610be857600080fd5b5035919050565b600060208284031215610c0157600080fd5b610c0a82610b54565b9392505050565b60008060408385031215610c2457600080fd5b610c2d83610b54565b9150610c3b60208401610b54565b90509250929050565b600181811c90821680610c5857607f821691505b602082108103610c7857634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561034657634e487b7160e01b600052601160045260246000fdfea2646970667358221220a2c7769160f8d12fcb2408415ba303160134bd5b3dd847e56c8ccce11960172264736f6c63430008130033",
    "sourceMap": "590:415:24:-:0;;;766:45;;;;;;;;;;2033:116:15;;;;;;;;;;;;;-1:-1:-1;;;2033:116:15;;;;;;;;;;;;;;;;-1:-1:-1;;;2033:116:15;;;2108:5;2100;:13;;;;;;:::i;:::-;-1:-1:-1;2124:7:15;:17;2134:7;2124;:17;:::i;:::-;;2033:116;;964:32:14;983:12;:10;;;:12;;:::i;:::-;964:18;:32::i;:::-;590:415:24;;656:98:22;736:10;;656:98::o;2503:191:14:-;2596:6;;;-1:-1:-1;;;;;2613:17:14;;;-1:-1:-1;;;;;;2613:17:14;;;;;;;2646:40;;2596:6;;;2613:17;2596:6;;2646:40;;2577:16;;2646:40;2566:128;2503:191;:::o;14:127:25:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:25;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:25;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:25;;;2580:26;2531:89;-1:-1:-1;;1335:1:25;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:25;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:25;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:25;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:25:o;:::-;590:415:24;;;;;;",
    "deployedSourceMap": "590:415:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:100:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4579:201;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:25;;1162:22;1144:41;;1132:2;1117:18;4579:201:15;1004:187:25;3348:108:15;3436:12;;3348:108;;;1342:25:25;;;1330:2;1315:18;3348:108:15;1196:177:25;5360:261:15;;;;;;:::i;:::-;;:::i;3190:93::-;;;3273:2;1853:36:25;;1841:2;1826:18;3190:93:15;1711:184:25;6030:238:15;;;;;;:::i;:::-;;:::i;597:91:17:-;;;;;;:::i;:::-;;:::i;:::-;;682:57:24;;726:13;682:57;;3519:127:15;;;;;;:::i;:::-;-1:-1:-1;;;;;3620:18:15;3593:7;3620:18;;;;;;;;;;;;3519:127;1884:103:14;;;:::i;1007:164:17:-;;;;;;:::i;:::-;;:::i;1243:87:14:-;1316:6;;1243:87;;-1:-1:-1;;;;;1316:6:14;;;2422:51:25;;2410:2;2395:18;1243:87:14;2276:203:25;2438:104:15;;;:::i;819:93:24:-;;;;;;:::i;:::-;;:::i;6771:436:15:-;;;;;;:::i;:::-;;:::i;3852:193::-;;;;;;:::i;:::-;;:::i;4108:151::-;;;;;;:::i;:::-;;:::i;920:82:24:-;;;:::i;2142:201:14:-;;;;;;:::i;:::-;;:::i;2219:100:15:-;2273:13;2306:5;2299:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2219:100;:::o;4579:201::-;4662:4;736:10:22;4718:32:15;736:10:22;4734:7:15;4743:6;4718:8;:32::i;:::-;4768:4;4761:11;;;4579:201;;;;;:::o;5360:261::-;5457:4;736:10:22;5515:38:15;5531:4;736:10:22;5546:6:15;5515:15;:38::i;:::-;5564:27;5574:4;5580:2;5584:6;5564:9;:27::i;:::-;-1:-1:-1;5609:4:15;;5360:261;-1:-1:-1;;;;5360:261:15:o;6030:238::-;6118:4;736:10:22;6174:64:15;736:10:22;6190:7:15;6227:10;6199:25;736:10:22;6190:7:15;6199:9;:25::i;:::-;:38;;;;:::i;:::-;6174:8;:64::i;597:91:17:-;653:27;736:10:22;673:6:17;653:5;:27::i;:::-;597:91;:::o;1884:103:14:-;1129:13;:11;:13::i;:::-;1949:30:::1;1976:1;1949:18;:30::i;:::-;1884:103::o:0;1007:164:17:-;1084:46;1100:7;736:10:22;1123:6:17;1084:15;:46::i;:::-;1141:22;1147:7;1156:6;1141:5;:22::i;:::-;1007:164;;:::o;2438:104:15:-;2494:13;2527:7;2520:14;;;;;:::i;819:93:24:-;1129:13:14;:11;:13::i;:::-;879:25:24::1;885:10;897:6;879:5;:25::i;6771:436:15:-:0;6864:4;736:10:22;6864:4:15;6947:25;736:10:22;6964:7:15;6947:9;:25::i;:::-;6920:52;;7011:15;6991:16;:35;;6983:85;;;;-1:-1:-1;;;6983:85:15;;3563:2:25;6983:85:15;;;3545:21:25;3602:2;3582:18;;;3575:30;3641:34;3621:18;;;3614:62;-1:-1:-1;;;3692:18:25;;;3685:35;3737:19;;6983:85:15;;;;;;;;;7104:60;7113:5;7120:7;7148:15;7129:16;:34;7104:8;:60::i;3852:193::-;3931:4;736:10:22;3987:28:15;736:10:22;4004:2:15;4008:6;3987:9;:28::i;4108:151::-;-1:-1:-1;;;;;4224:18:15;;;4197:7;4224:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4108:151::o;920:82:24:-;958:36;964:10;726:13;958:5;:36::i;2142:201:14:-;1129:13;:11;:13::i;:::-;-1:-1:-1;;;;;2231:22:14;::::1;2223:73;;;::::0;-1:-1:-1;;;2223:73:14;;3969:2:25;2223:73:14::1;::::0;::::1;3951:21:25::0;4008:2;3988:18;;;3981:30;4047:34;4027:18;;;4020:62;-1:-1:-1;;;4098:18:25;;;4091:36;4144:19;;2223:73:14::1;3767:402:25::0;2223:73:14::1;2307:28;2326:8;2307:18;:28::i;10764:346:15:-:0;-1:-1:-1;;;;;10866:19:15;;10858:68;;;;-1:-1:-1;;;10858:68:15;;4376:2:25;10858:68:15;;;4358:21:25;4415:2;4395:18;;;4388:30;4454:34;4434:18;;;4427:62;-1:-1:-1;;;4505:18:25;;;4498:34;4549:19;;10858:68:15;4174:400:25;10858:68:15;-1:-1:-1;;;;;10945:21:15;;10937:68;;;;-1:-1:-1;;;10937:68:15;;4781:2:25;10937:68:15;;;4763:21:25;4820:2;4800:18;;;4793:30;4859:34;4839:18;;;4832:62;-1:-1:-1;;;4910:18:25;;;4903:32;4952:19;;10937:68:15;4579:398:25;10937:68:15;-1:-1:-1;;;;;11018:18:15;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11070:32;;1342:25:25;;;11070:32:15;;1315:18:25;11070:32:15;;;;;;;;10764:346;;;:::o;11401:419::-;11502:24;11529:25;11539:5;11546:7;11529:9;:25::i;:::-;11502:52;;-1:-1:-1;;11569:16:15;:37;11565:248;;11651:6;11631:16;:26;;11623:68;;;;-1:-1:-1;;;11623:68:15;;5184:2:25;11623:68:15;;;5166:21:25;5223:2;5203:18;;;5196:30;5262:31;5242:18;;;5235:59;5311:18;;11623:68:15;4982:353:25;11623:68:15;11735:51;11744:5;11751:7;11779:6;11760:16;:25;11735:8;:51::i;:::-;11491:329;11401:419;;;:::o;7677:806::-;-1:-1:-1;;;;;7774:18:15;;7766:68;;;;-1:-1:-1;;;7766:68:15;;5542:2:25;7766:68:15;;;5524:21:25;5581:2;5561:18;;;5554:30;5620:34;5600:18;;;5593:62;-1:-1:-1;;;5671:18:25;;;5664:35;5716:19;;7766:68:15;5340:401:25;7766:68:15;-1:-1:-1;;;;;7853:16:15;;7845:64;;;;-1:-1:-1;;;7845:64:15;;5948:2:25;7845:64:15;;;5930:21:25;5987:2;5967:18;;;5960:30;6026:34;6006:18;;;5999:62;-1:-1:-1;;;6077:18:25;;;6070:33;6120:19;;7845:64:15;5746:399:25;7845:64:15;-1:-1:-1;;;;;7995:15:15;;7973:19;7995:15;;;;;;;;;;;8029:21;;;;8021:72;;;;-1:-1:-1;;;8021:72:15;;6352:2:25;8021:72:15;;;6334:21:25;6391:2;6371:18;;;6364:30;6430:34;6410:18;;;6403:62;-1:-1:-1;;;6481:18:25;;;6474:36;6527:19;;8021:72:15;6150:402:25;8021:72:15;-1:-1:-1;;;;;8129:15:15;;;:9;:15;;;;;;;;;;;8147:20;;;8129:38;;8347:13;;;;;;;;;;:23;;;;;;8399:26;;1342:25:25;;;8347:13:15;;8399:26;;1315:18:25;8399:26:15;;;;;;;8438:37;9651:675;;-1:-1:-1;;;;;9735:21:15;;9727:67;;;;-1:-1:-1;;;9727:67:15;;6759:2:25;9727:67:15;;;6741:21:25;6798:2;6778:18;;;6771:30;6837:34;6817:18;;;6810:62;-1:-1:-1;;;6888:18:25;;;6881:31;6929:19;;9727:67:15;6557:397:25;9727:67:15;-1:-1:-1;;;;;9894:18:15;;9869:22;9894:18;;;;;;;;;;;9931:24;;;;9923:71;;;;-1:-1:-1;;;9923:71:15;;7161:2:25;9923:71:15;;;7143:21:25;7200:2;7180:18;;;7173:30;7239:34;7219:18;;;7212:62;-1:-1:-1;;;7290:18:25;;;7283:32;7332:19;;9923:71:15;6959:398:25;9923:71:15;-1:-1:-1;;;;;10030:18:15;;:9;:18;;;;;;;;;;;10051:23;;;10030:44;;10169:12;:22;;;;;;;10220:37;1342:25:25;;;10030:9:15;;:18;10220:37;;1315:18:25;10220:37:15;1196:177:25;1408:132:14;1316:6;;-1:-1:-1;;;;;1316:6:14;736:10:22;1472:23:14;1464:68;;;;-1:-1:-1;;;1464:68:14;;7564:2:25;1464:68:14;;;7546:21:25;;;7583:18;;;7576:30;7642:34;7622:18;;;7615:62;7694:18;;1464:68:14;7362:356:25;2503:191:14;2596:6;;;-1:-1:-1;;;;;2613:17:14;;;-1:-1:-1;;;;;;2613:17:14;;;;;;;2646:40;;2596:6;;;2613:17;2596:6;;2646:40;;2577:16;;2646:40;2566:128;2503:191;:::o;8770:548:15:-;-1:-1:-1;;;;;8854:21:15;;8846:65;;;;-1:-1:-1;;;8846:65:15;;7925:2:25;8846:65:15;;;7907:21:25;7964:2;7944:18;;;7937:30;8003:33;7983:18;;;7976:61;8054:18;;8846:65:15;7723:355:25;8846:65:15;9002:6;8986:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9157:18:15;;:9;:18;;;;;;;;;;;:28;;;;;;9212:37;1342:25:25;;;9212:37:15;;1315:18:25;9212:37:15;;;;;;;1007:164:17;;:::o;14:548:25:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:25;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:25:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:25;;1900:180;-1:-1:-1;1900:180:25:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:25:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:222::-;3199:9;;;3220:10;;;3217:133;;;3272:10;3267:3;3263:20;3260:1;3253:31;3307:4;3304:1;3297:15;3335:4;3332:1;3325:15",
    "sourcePath": "d:/Projects/tc-protocol/smart-contract/test/mocks/MockWBTC.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.19+commit.7dd6d404"
    },
    "ast": {
        "absolutePath": "d:/Projects/tc-protocol/smart-contract/test/mocks/MockWBTC.sol",
        "exportedSymbols": {
            "ERC20": [
                39540
            ],
            "ERC20Burnable": [
                39662
            ],
            "MockWBTC": [
                40555
            ],
            "Ownable": [
                38953
            ],
            "SafeERC20": [
                40099
            ]
        },
        "id": 40556,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 40497,
                "literals": [
                    "solidity",
                    "0.8",
                    ".19"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:24"
            },
            {
                "absolutePath": "d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
                "file": "d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
                "id": 40499,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 40556,
                "sourceUnit": 39541,
                "src": "60:120:24",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 40498,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39540,
                            "src": "68:5:24",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "file": "d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
                "id": 40501,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 40556,
                "sourceUnit": 39663,
                "src": "182:147:24",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 40500,
                            "name": "ERC20Burnable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39662,
                            "src": "190:13:24",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "file": "d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                "id": 40503,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 40556,
                "sourceUnit": 38954,
                "src": "331:119:24",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 40502,
                            "name": "Ownable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38953,
                            "src": "339:7:24",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "absolutePath": "d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                "file": "d:/Projects/tc-protocol/smart-contract/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                "id": 40505,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 40556,
                "sourceUnit": 40100,
                "src": "452:134:24",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 40504,
                            "name": "SafeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40099,
                            "src": "460:9:24",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 40506,
                            "name": "ERC20",
                            "nameLocations": [
                                "611:5:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39540,
                            "src": "611:5:24"
                        },
                        "id": 40507,
                        "nodeType": "InheritanceSpecifier",
                        "src": "611:5:24"
                    },
                    {
                        "baseName": {
                            "id": 40508,
                            "name": "ERC20Burnable",
                            "nameLocations": [
                                "618:13:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39662,
                            "src": "618:13:24"
                        },
                        "id": 40509,
                        "nodeType": "InheritanceSpecifier",
                        "src": "618:13:24"
                    },
                    {
                        "baseName": {
                            "id": 40510,
                            "name": "Ownable",
                            "nameLocations": [
                                "633:7:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 38953,
                            "src": "633:7:24"
                        },
                        "id": 40511,
                        "nodeType": "InheritanceSpecifier",
                        "src": "633:7:24"
                    }
                ],
                "canonicalName": "MockWBTC",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 40555,
                "linearizedBaseContracts": [
                    40555,
                    38953,
                    39662,
                    39540,
                    39687,
                    39618,
                    40451
                ],
                "name": "MockWBTC",
                "nameLocation": "599:8:24",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "global": false,
                        "id": 40515,
                        "libraryName": {
                            "id": 40512,
                            "name": "SafeERC20",
                            "nameLocations": [
                                "654:9:24"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40099,
                            "src": "654:9:24"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "648:26:24",
                        "typeName": {
                            "id": 40514,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 40513,
                                "name": "ERC20",
                                "nameLocations": [
                                    "668:5:24"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 39540,
                                "src": "668:5:24"
                            },
                            "referencedDeclaration": 39540,
                            "src": "668:5:24",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$39540",
                                "typeString": "contract ERC20"
                            }
                        }
                    },
                    {
                        "constant": true,
                        "functionSelector": "6376d2d8",
                        "id": 40522,
                        "mutability": "constant",
                        "name": "MAX_FAUCET_AMOUNT",
                        "nameLocation": "706:17:24",
                        "nodeType": "VariableDeclaration",
                        "scope": 40555,
                        "src": "682:57:24",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 40516,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "682:7:24",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "commonType": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                            },
                            "id": 40521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                                "hexValue": "3130",
                                "id": 40517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "726:2:24",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                },
                                "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                                "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                },
                                "id": 40520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 40518,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "731:2:24",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 40519,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "737:2:24",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                },
                                "src": "731:8:24",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                }
                            },
                            "src": "726:13:24",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_10000000000000000000_by_1",
                                "typeString": "int_const 10000000000000000000"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 40529,
                            "nodeType": "Block",
                            "src": "809:2:24",
                            "statements": []
                        },
                        "id": 40530,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "5772617070656420425443",
                                        "id": 40525,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "786:13:24",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_2ef08214ff447791a5e9afb7318f8e3059fd5f496df6b60a73eead50d2471ef1",
                                            "typeString": "literal_string \"Wrapped BTC\""
                                        },
                                        "value": "Wrapped BTC"
                                    },
                                    {
                                        "hexValue": "57425443",
                                        "id": 40526,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "801:6:24",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_98da2c5e4c6b1db946694570273b859a6e4083ccc8faa155edfc4c54eb3cfd73",
                                            "typeString": "literal_string \"WBTC\""
                                        },
                                        "value": "WBTC"
                                    }
                                ],
                                "id": 40527,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 40524,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "780:5:24"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 39540,
                                    "src": "780:5:24"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "780:28:24"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 40523,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "777:2:24"
                        },
                        "returnParameters": {
                            "id": 40528,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "809:0:24"
                        },
                        "scope": 40555,
                        "src": "766:45:24",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 40543,
                            "nodeType": "Block",
                            "src": "868:44:24",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 40538,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "885:3:24",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 40539,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "889:6:24",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "885:10:24",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 40540,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40532,
                                                "src": "897:6:24",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 40537,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 39357,
                                            "src": "879:5:24",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 40541,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "879:25:24",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 40542,
                                    "nodeType": "ExpressionStatement",
                                    "src": "879:25:24"
                                }
                            ]
                        },
                        "functionSelector": "a0712d68",
                        "id": 40544,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 40535,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 40534,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "858:9:24"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 38872,
                                    "src": "858:9:24"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "858:9:24"
                            }
                        ],
                        "name": "mint",
                        "nameLocation": "828:4:24",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 40533,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 40532,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "841:6:24",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 40544,
                                    "src": "833:14:24",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 40531,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "833:7:24",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "832:16:24"
                        },
                        "returnParameters": {
                            "id": 40536,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "868:0:24"
                        },
                        "scope": 40555,
                        "src": "819:93:24",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 40553,
                            "nodeType": "Block",
                            "src": "947:55:24",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 40548,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "964:3:24",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 40549,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "968:6:24",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "964:10:24",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 40550,
                                                "name": "MAX_FAUCET_AMOUNT",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 40522,
                                                "src": "976:17:24",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 40547,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 39357,
                                            "src": "958:5:24",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 40551,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "958:36:24",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 40552,
                                    "nodeType": "ExpressionStatement",
                                    "src": "958:36:24"
                                }
                            ]
                        },
                        "functionSelector": "de5f72fd",
                        "id": 40554,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "faucet",
                        "nameLocation": "929:6:24",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 40545,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "935:2:24"
                        },
                        "returnParameters": {
                            "id": 40546,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "947:0:24"
                        },
                        "scope": 40555,
                        "src": "920:82:24",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 40556,
                "src": "590:415:24",
                "usedErrors": []
            }
        ],
        "src": "33:974:24"
    },
    "functionHashes": {
        "MAX_FAUCET_AMOUNT()": "6376d2d8",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "burnFrom(address,uint256)": "79cc6790",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "faucet()": "de5f72fd",
        "increaseAllowance(address,uint256)": "39509351",
        "mint(uint256)": "a0712d68",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "657000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "MAX_FAUCET_AMOUNT()": "284",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24652",
            "balanceOf(address)": "2651",
            "burn(uint256)": "50827",
            "burnFrom(address,uint256)": "infinite",
            "decimals()": "200",
            "decreaseAllowance(address,uint256)": "26973",
            "faucet()": "50709",
            "increaseAllowance(address,uint256)": "infinite",
            "mint(uint256)": "52975",
            "name()": "infinite",
            "owner()": "2368",
            "renounceOwnership()": "infinite",
            "symbol()": "infinite",
            "totalSupply()": "2349",
            "transfer(address,uint256)": "51094",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28446"
        }
    }
}